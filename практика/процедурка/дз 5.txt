1.
#include <iostream>
#include <cmath>
#include <vector>

int main(int argc, char *argv[]) {
	unsigned int n;
	std::cout << "Enter n >> ";
	std::cin >> n;

	if (n < 1) {
		std::cout << "n must be greater then 1\n";
		return 1;
	}

	std::vector<bool> a(n + 1, true);
	for (int i = 2; i * i <= n; i++) {
		if (a[i]) {
			for (int j = i * i; j <= n; j += i) {
				a[j] = false;
			}
		}
	}

	std::cout << "Numbers: ";
	for (int i = 2; i < a.size(); i++) {
		if (a[i]) {
			std::cout << i << ' ';
		}
	}
	std::cout << '\n';
}

2.
#include <iostream>
#include <cmath>

int main(int argc, char *argv[]) {
	int a, b;
	std::cout << "Enter a and b >> ";
	std::cin >> a >> b;

	// division
	int d_a = a, d_b = b;
	while (d_a != 0 && d_b != 0) {
		if (d_a >= d_b) {
			d_a %= d_b;
		} else {
			d_b %= d_a;
		}
	}
	std::cout << "NOD (div) = " << d_a + d_b << '\n';

	// subtraction
	int s_a = a, s_b = b;
	if (s_a == 0) s_a = s_b;
	if (s_b == 0) s_b = s_a;
	while (s_a != s_b) {
		if (s_a > s_b) {
			s_a -= s_b;
		} else {
			s_b -= s_a;
		}
	}
	std::cout << "NOD (sub) = " << s_a << '\n';

3. 
30
#include <iostream>
#include <map>
#include <fstream>
#include <string>
using namespace std;

int main() {
    system("chcp 1251");
    cout << "30\n";

    string text;

    ifstream fin("input.txt");
    ofstream fout("output3.txt");

    while (getline(fin, text)) {
        for (char item: text) {
            if (item == ' ')
                cout << "";
            else if (item == 'я') {
                fout << 'а';
            } else if (item == 'z') {
                fout << 'a';
            } else {
                fout << (char) (item + 1);
            }
        }
        fout << "\n";
    }

    fin.close();
    fout.close();

}

}

20
#include <iostream>
#include <map>
#include <string>
using namespace std;

int main(){
    cout << "20\n";

    map<char, int> m;
    string inp;
    cout << "enter string\n";
    cin >> inp;
    for (char i : inp) {
        if (m.count(i)) {
            m[i] ++;
    }
    else {
        m[i] = 0;
    }
    }

    int min_count = 10000000;
    int character = 0;

    for (auto i : m) {
        if (min_count > i.second) {
        min_count = i.second;
        character = i.first;
        }
    }
    cout << (char)character<<"\n";

    string g;
    cin >> g;
}

4.
30
#include <iostream>

using namespace std;

int main() {
    system("chcp 1251");

    int n;
    int lst_n[10];

    for (int i = 0; i < 10; i++)
        lst_n[i] = false;
    cout << "30\nn = ";
    cin >> n;

    int number_of_digits = 0;

    while (n > 0) {
        lst_n[n % 10] = true;
        n /= 10;
    }

    for (int i = 0; i < 10; i++) {
        if (lst_n[i])
            number_of_digits++;
    }

    cout << number_of_digits;

}

60
#include <iostream>

using namespace std;

long get_product(int n) {
    long product = 1;
    int v;

    for (int i = 0; i < n; i++) {
        cin >> v;
        product *= v;
    }

    return product;
}

int main(){
    cout << " 60\nn = ";

    int n;
    cin >> n;

    cout << "\nenter " << 3 * n << " numbers";

    long x = get_product(n);
    long y = get_product(n);
    long z = get_product(n);
    long long Q = x * x + y * y + z * z;

    cout << "Q = " << Q;

}

#include <iostream>
#include <vector>

using namespace std;

long gcd(long a, long b) {
    if (a == b)
        return a;
    else if (a > b)
        return gcd(a - b, b);
    else
        return gcd(a, b - a);
}

long scm(long a, long b) {
    return a * b / gcd(a, b);
}

int main() {
    long n, x;
    cout << "n = ";
    cin >> n;
    if (n >= 2) {
        vector<int> list;
        for (int i = 0; i < n; i++) {
            cout << "list[" << i << "] = ";
            cin >> x;
            list.push_back(x);
        }

        long my_gcd = gcd(list[0], list[1]);
        long my_scm = scm(list[0], list[1]);

        for (int i = 2; i < n; i++) {
            my_gcd = gcd(list[i], my_gcd);
            my_scm = scm(list[i], my_scm);
        }

        cout << "NOD = " << my_gcd << "\n";
        cout << "NOK = " << my_scm << "\n";
    }

    else
        cout << "2 elements";

}

5. 
